{"version":3,"sources":["components/Typer/Statistics/Statistics.module.sass","components/Layout/layout.module.sass","components/Typer/Typer.module.sass","components/Typer/Input/Import.module.sass","img/fone.png","components/Typer/Interspector/Interspector.module.sass","components/Typer/Input/Input.js","components/Typer/Loader/Loader.js","components/Typer/Interspector/Interspector.js","components/Typer/Statistics/Statistics.js","components/Typer/Typer.js","components/Header/Header.js","components/About/About.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Input","props","type","id","className","styles","folder","onChange","onSymbolInput","Loader","Interspector","dividerStatus","dividerClasses","divider","divider_on","setInterval","state","setState","divider_off","this","dividerPulse","frame","loading","done","inputString","join","wait","outString","Component","statistics","data","errors","correctRate","Math","floor","right","wrong","left","Typer","wordsCount","libraryLength","secondCheck","document","getElementById","focus","getData","prevProps","prevState","snapshot","evalSymbol","slice","length","input","evalString","target","value","charAt","compareSymbol","syncFirebaseApp","db","firebase","words","collection","wordsToShow","setLoading","i","index","random","doc","toString","get","then","push","name","setData","apiKey","authDomain","projectId","e","typer","onClick","setFocus","bind","Statistics","Header","to","activeClassName","exact","React","About","Layout","app","style","backgroundImage","bcImg","path","component","App","Boolean","window","location","hostname","match","application","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fce57473.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__1aYHc\",\"left\":\"Statistics_left__2zrju\",\"right\":\"Statistics_right__2bFjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"layout_app__2yu_-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"typer\":\"Typer_typer__1QAF1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"folder\":\"Import_folder__3BUj_\"};","module.exports = __webpack_public_path__ + \"static/media/fone.41234078.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wait\":\"Interspector_wait__pr4ai\",\"done\":\"Interspector_done__1zajl\",\"divider\":\"Interspector_divider__pPv-a\",\"divider_on\":\"Interspector_divider_on__3iDLK\",\"divider_off\":\"Interspector_divider_off__3vLKz\",\"frame\":\"Interspector_frame__18twt\"};","// @flow\r\nimport * as React from 'react';\r\nimport styles from './Import.module.sass'\r\nconst Input = (props) => {\r\n    return (\r\n        <div>\r\n            <input type=\"text\" id=\"folder\" className={styles.folder} onChange={props.onSymbolInput}/>\r\n        </div>\r\n    );\r\n};\r\nexport default Input;","import React from \"react\";\r\nimport './Loader.css'\r\nconst Loader = props => {\r\n    return (\r\n        <div className=\"loadingio-spinner-eclipse-l6qwq9q1v7j\">\r\n            <div className=\"ldio-zqyqc4mjb8\">\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Loader","import React, {Component} from 'react';\r\nimport styles from './Interspector.module.sass';\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nclass Interspector extends Component{\r\n    state = {\r\n        dividerStatus:true,\r\n        dividerClasses:[\r\n            styles.divider,\r\n            styles.divider_on\r\n        ]\r\n    };\r\n\r\n    dividerPulse(){\r\n        setInterval(()=>{\r\n            if(this.state.dividerStatus){\r\n                this.setState({\r\n                    dividerStatus: !this.state.dividerStatus,\r\n                    dividerClasses:[\r\n                        styles.divider,\r\n                        styles.divider_off\r\n                    ]\r\n                })\r\n            }else{\r\n                this.setState({\r\n                    dividerStatus: !this.state.dividerStatus,\r\n                    dividerClasses:[\r\n                        styles.divider,\r\n                        styles.divider_on\r\n                    ]\r\n                })\r\n            }\r\n        },500)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.dividerPulse()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className={styles.frame + \" col-auto\"}>\r\n                        <div className=\"container\">\r\n                            <div className=\"row justify-content-center\">\r\n                                {this.props.loading ? <Loader/> : null}\r\n                                {!this.props.loading ?  <div className={styles.done}>{this.props.inputString}</div> : null}\r\n                                {!this.props.loading ?  <div className={this.state.dividerClasses.join(' ')} id=\"divider\"/> : null}\r\n                                {!this.props.loading ?  <div className={styles.wait}>{this.props.outString}</div> : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\nexport default Interspector;","import React from \"react\";\r\nimport styles from './Statistics.module.sass'\r\nconst statistics = (props) =>{\r\n    let data = {\r\n        errors:props.statistics.errors,\r\n        correctRate: Math.floor(props.statistics.right/\r\n            (props.statistics.right + props.statistics.wrong)*1000)/10\r\n    };\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-around mt-4 mb-3\">\r\n                <div className={styles.left + \" col-auto mr-5\"}>\r\n                    {data.errors} errors\r\n                </div>\r\n                <div className={styles.right +\" col-auto ml-5\"}>\r\n                    {data.correctRate ? data.correctRate : '0'}% correct rate\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default statistics\r\n","import React, {Component} from 'react';\r\nimport styles from './Typer.module.sass';\r\nimport * as firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport Input from \"./Input/Input\";\r\nimport Interspector from \"./Interspector/Interspector\";\r\nimport Statistics from \"./Statistics/Statistics\";\r\nclass Typer extends Component{\r\n\r\n    state={\r\n        inputString:\"\",\r\n        outString: \"\",\r\n        wordsCount: 8,\r\n        libraryLength: 17000,\r\n        secondCheck: false,\r\n        statistics:{\r\n            errors:0,\r\n            right:0,\r\n            wrong:0,\r\n        },\r\n        loading: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        let folder = document.getElementById('folder');\r\n        folder.focus();\r\n        this.getData();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(!this.state.loading && !prevState.loading){\r\n            if(!this.state.outString){\r\n                this.getData();\r\n            }\r\n        }\r\n    }\r\n\r\n    compareSymbol(evalSymbol){\r\n        if(this.state.outString){\r\n            if(evalSymbol === this.state.outString[0]){\r\n                this.setState({\r\n                    inputString:this.state.inputString + evalSymbol,\r\n                    outString:this.state.outString.slice(1,this.state.outString.length),\r\n                    secondCheck: false,\r\n                    statistics:{\r\n                        ...this.state.statistics,\r\n                        right:  !this.state.secondCheck ? this.state.statistics.right+1 : this.state.statistics.right\r\n                    }\r\n                });\r\n            }else{\r\n                this.setState({\r\n                    secondCheck: this.state.secondCheck ? this.state.secondCheck : true,\r\n                    statistics:{\r\n                        ...this.state.statistics,\r\n                        errors: this.state.statistics.errors + 1,\r\n                        wrong: this.state.secondCheck ? this.state.statistics.wrong : this.state.statistics.wrong +1,\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    onSymbolInput(input){\r\n        let evalString = input.target.value;\r\n        let evalSymbol = evalString.charAt(evalString.length - 1);\r\n        this.compareSymbol(evalSymbol);\r\n    }\r\n\r\n    async getData(){\r\n        this.syncFirebaseApp();\r\n        let db = firebase.firestore();\r\n        let words = db.collection('words');\r\n        let wordsToShow = [];\r\n        this.setLoading(true);\r\n        for(let i=0; i<this.state.wordsCount; i++){\r\n            let index = Math.floor(-0.5 + Math.random()*(this.state.libraryLength + 1));\r\n            await words.doc(index.toString()).get().then(doc=>{\r\n                wordsToShow.push(doc.data().name);\r\n            });\r\n        }\r\n        this.setLoading(false);\r\n        this.setData(wordsToShow);\r\n    }\r\n\r\n    setLoading(loading){\r\n        this.setState({\r\n            statistics:{\r\n                ...this.state.statistics,\r\n            },\r\n            loading: loading,\r\n        });\r\n    }\r\n\r\n    setFocus(){\r\n        let folder = document.getElementById('folder');\r\n        folder.focus();\r\n    }\r\n\r\n    setData(data){\r\n        this.setState({\r\n            inputString:\"\",\r\n            outString: data.join(' '),\r\n        })\r\n    }\r\n\r\n    syncFirebaseApp(){\r\n        try{\r\n            firebase.initializeApp({\r\n                apiKey: 'AIzaSyDH7MRNLgPWkefxHmQbQmEhPK1fGuahXBo',\r\n                authDomain: 'eur3',\r\n                projectId: 'touch-typer-841ef'\r\n            });\r\n        }catch (e) {}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.typer+\" container\"} onClick={this.setFocus}>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <Input onSymbolInput={this.onSymbolInput.bind(this)}/>\r\n                        <Statistics statistics={this.state.statistics}/>\r\n                        <Interspector inputString={this.state.inputString}\r\n                                      outString={this.state.outString}\r\n                                      loading={this.state.loading}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Typer;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport \"./Header.sass\"\r\nexport default class Header extends React.Component{\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-5\">\r\n                <div className=\"row justify-content-end mr-5 ml-5\">\r\n                    <div className=\"col-auto\">\r\n                        <NavLink to=\"/blind-typer\" className=\"h-b\" activeClassName=\"h-a-b\" exact>Home</NavLink>\r\n                    </div>\r\n                    <div className=\"col-auto\">\r\n                        <NavLink to='/blind-typer/about' className=\"h-b\" activeClassName=\"h-a-b\" exact>About</NavLink>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport \"./About.sass\"\r\nconst About = props => {\r\n    return (\r\n        <div className=\"container-fluid pr-3 pl-3 mt-5\">\r\n            <div className=\"row justify-content-start\">\r\n                <div className=\"col-5\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row mb-2\">\r\n                            <div className=\"col title\">\r\n                                This is simple <strong>blind typing</strong> trainer\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mb-5\">\r\n                            <div className=\"col plain\">\r\n                                Touch type training can improve an individual's typing speed and accuracy dramatically.\r\n                                Speeds <strong>average around 30-40 WPM</strong>, while a speed of 60-80 WPM\r\n                                the approximate speed to keep up with one's thoughts. A Microsoft survey suggested that many managers\r\n                                expect employees to be able to type at a <strong>minimum of 50 WPM</strong>. Professional career typists can <strong>exceed\r\n                                100 WPM</strong> repeatedly and continuously (secretarial, data entry, etc.). Routine practice is required to maintain\r\n                                a <strong>high typing speed and accuracy.</strong>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col title mb-2\">\r\n                                Why I made this app?\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col plain mb-5\">\r\n                                I suppose there are a lot of blind typing apps around the internet. But I didnt find one with <strong>infinity\r\n                                random training.</strong>  I think that is the best practice instead of typing the same words or letters.\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col title\">\r\n                                <strong>Enjoy!</strong>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default About","import React, {Component} from 'react';\r\nimport styles from './layout.module.sass';\r\nimport Typer from \"../Typer/Typer\";\r\nimport Header from \"../Header/Header\";\r\nimport {Route} from \"react-router-dom\";\r\nimport bcImg from \"../../img/fone.png\";\r\nimport About from \"../About/About\";\r\n\r\nclass Layout extends Component {\r\n    render() {\r\n        return (\r\n            <div className={styles.app} style={{backgroundImage: `url(${bcImg})`}}>\r\n                <Header/>\r\n                <Route path='/blind-typer' exact component={Typer}/>\r\n                <Route path='/blind-typer/about' exact component={About}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import React from 'react';\r\nimport \"@babel/polyfill\";\r\nimport Layout from \"./components/Layout/Layout\";\r\nfunction App() {\r\n  return (\r\n    <Layout>\r\n      <button className=\"btn\">423</button>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport {BrowserRouter as Router} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst application = (\r\n    <Router>\r\n        <App />\r\n    </Router>\r\n);\r\nReactDOM.render(application, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}